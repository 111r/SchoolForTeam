{
  "1935": "


        <div class="d-flex flex-column" id="printColumns">
            <div class="border border-dark mt-3" id="printT">
                <!-- Header section  -->
                <section class="d-flex justify-content-between align-items-center ">
                    <div class="schoollogo1" style="width: 21%">
                        <img src="/Content/Images/fevicon1.jpg" alt="notfound" style="width: 152px; height: 120px; margin-bottom: 11px;">
                    </div>
                    <div class="headerContent text-center " style="width:58%">
                        <div class="ft11 mb-0"><b>Nirmala Convent School</b></div>
                        <p class="ft12 mb-0">
                            Prem Nagar, Dewas Road, Ujjain - 456664, M.P, India
                        </p>
                        <div class="ft13"><b>Academic Session : 2023-24</b></div>
                        <div class="ft13"><b>Report Card</b></div>
                    </div>
                    <div class="schoollogo1 " style="width:21%">
                        <img src="/Content/Images/logo3.png" alt="notfound" style="width: 120px; height: 103px;margin-left: 13px;">
                        <span class="ft14">CISCE Affiliation No. : MP034</span>
                    </div>
                </section>
                <hr class="m-0">

                <!-- students details  -->
                <section class="ft15 ps-1 my-1" style="font-size: 10px;">
                    <div class="row">
                        <div class="col-4" style="width: 60%">
                            <span style="margin-right: 5px"><b> Student's Name</b></span>
                            <span class="text-uppercase">
                                : <span style="border-bottom: 1px dashed" id="StudentName">AARAV  AHUJA</span>
                            </span>
                        </div>

                        <div class="col-4" style="width: 40%">
                            <span><b>Class &amp; Section</b></span>
                            <span class="text-uppercase">: <span style="border-bottom: 1px dashed" id="ClassSection">Class-I(BLUE)</span></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4" style="width: 60%">
                            <span style="margin-right: 11px"><b>Father's Name</b> </span>
                            <span class="text-uppercase"> : <span style="border-bottom: 1px dashed" id="FatherName">JIMMY AHUJA</span> </span>
                        </div>

                        <div class="col-4" style="width: 40%">
                            <span style="margin-right: 16px"><b>Date of Birth</b></span>
                            <span class="text-uppercase">: <span style="border-bottom: 1px dashed" id="DateOfBirth">01-Nov-2016</span> </span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-8" style="width: 60%">
                            <span style="margin-right: 6px"><b>Mother's Name</b></span>
                            <span class="text-uppercase">: <span style="border-bottom: 1px dashed" id="MotherName">ISHITA AHUJA</span></span>
                        </div>
                        <div class="col-4" style="width: 40%">
                            <span style="margin-right: 27px"><b>Attendance</b></span>
                            <span class="text-uppercase">: <span style="border-bottom: 1px dashed" id="Attendance">65/69</span></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4" style="width: 60%">
                            <span style="margin-right: 44px"><b>Roll No.</b></span>
                            <span class="text-uppercase">: <span style="border-bottom: 1px dashed" id="RollNo">3</span></span>
                        </div>
                        <div class="col-4" style="width: 40% ">
                            <span style="margin-right: 26px"><b>Scholar No.</b></span>
                            <span class="text-uppercase">: <span style="border-bottom: 1px dashed" id="ScholarNo">3504</span></span>
                        </div>
                    </div>
                </section>

                <!-- marks section  -->
                <table class="text-center my-2 ft15" id="MarksTable" style="font-size: 10px;">
                    <tbody><tr>
                        <th style="width: 180px;">Scholastic Areas:</th>
                        <th colspan="3" scope="colgroup">Unit Test</th>
                        <th colspan="4" scope="colgroup">TERM-I</th>
                        <th colspan="4" scope="colgroup">TERM-II</th>
                        <th colspan="4" class="preBoardResult" scope="colgroup" style="display: none;">PreBoard-I</th>
                        <th colspan="4" class="preBoardResult" scope="colgroup" style="display: none;">PreBoard-II</th>
                        <th colspan="2" scope="colgroup">Total</th>
                    </tr>
                    <tr>
                        <th scope="col">Subjects</th>

                        <th scope="col">UT I <span id="UT1MaxMarkTotal">(20)</span></th>
                        <th scope="col">UT II <span id="UT2MaxMarkTotal">(20)</span></th>
                        <th scope="col">Marks Obt.  <span id="UTTotalMaxMarkTotal">(40)</span></th>

                        <th scope="col">Theory <span class="Term1TheoryMaxMarkTotal">(80)</span></th>
                        <th scope="col">Practical <span id="Term1PracticalMaxMarkTotal">(20)</span></th>
                        <th scope="col">Marks Obt. <span id="Term1TotalMaxMarkTotal">(100)</span></th>
                        <th scope="col">Grade</th>

                        <th scope="col">Theory<span id="Term2TheoryMaxMarkTotal">(80)</span></th>
                        <th scope="col">Practical <span id="Term2PracticalMaxMarkTotal">(20)</span></th>
                        <th scope="col">Marks Obt. <span id="Term2TotalMaxMarkTotal">(100)</span></th>
                        <th scope="col">Grade</th>

                        <th class="preBoardResult" scope="col" style="display: none;">Theory<span id="PreBoard1TheoryMaxMarkTotal"></span></th>
                        <th class="preBoardResult" scope="col" style="display: none;">Practical <span id="PreBoard1PracticalMaxMarkTotal"></span></th>
                        <th class="preBoardResult" scope="col" style="display: none;">Marks Obt. <span id="PreBoard1TotalMaxMarkTotal"></span></th>
                        <th class="preBoardResult" scope="col" style="display: none;">Grade</th>

                        <th class="preBoardResult" scope="col" style="display: none;">Theory<span id="PreBoard2TheoryMaxMarkTotal"></span></th>
                        <th class="preBoardResult" scope="col" style="display: none;">Practical <span id="PreBoard2PracticalMaxMarkTotal"></span></th>
                        <th class="preBoardResult" scope="col" style="display: none;">Marks Obt. <span id="PreBoard2TotalMaxMarkTotal"></span></th>
                        <th class="preBoardResult" scope="col" style="display: none;">Grade</th>

                        <th scope="col">Marks</th>
                        <th scope="col">Grade</th>
                    </tr>
                <tr><td scope="row" class="text-uppercase text-start ps-1">English Language   </td><td>17</td><td>17</td><td>34</td><td>69</td><td>16</td><td>85</td><td>A</td><td>45</td><td>20</td><td>65</td><td>B+</td><td>184</td><td>A</td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">English Literature</td><td>6.5</td><td>16</td><td>22.5</td><td>63.5</td><td>19</td><td>82.5</td><td>A</td><td>23</td><td>5</td><td>28</td><td>D</td><td>133</td><td>B</td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">Hindi Lang </td><td>18.5</td><td>17.5</td><td>36</td><td>70</td><td>20</td><td>90</td><td>A+</td><td>34</td><td>-</td><td>34</td><td>C</td><td>160</td><td>B+</td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">Mathematics</td><td>17.5</td><td>16.5</td><td>34</td><td>65.5</td><td>18</td><td>83.5</td><td>A</td><td>67</td><td>AB</td><td>67</td><td>B+</td><td>184.5</td><td>A</td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">EVS</td><td>19</td><td>16.5</td><td>35.5</td><td>44.5</td><td>20</td><td>64.5</td><td>B+</td><td>36</td><td>12</td><td>48</td><td>C</td><td>148</td><td>B</td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">Computer</td><td>11</td><td>12</td><td>23</td><td>42</td><td>19</td><td>61</td><td>B</td><td>45</td><td>14</td><td>59</td><td>B</td><td>143</td><td>B+</td></tr><tr><td scope="row" class="text-uppercase text-start ps-1" style="font-weight: bold;">Total</td><td><b>89.5</b></td><td><b>95.5</b></td><td><b>185</b></td><td><b>354.5</b></td><td><b>112</b></td><td><b>466.5</b></td><td><b>A</b></td><td><b>250</b></td><td><b>51</b></td><td><b>301</b></td><td><b>B</b></td><td><b>952.5</b></td><td><b>B+</b></td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">Percentage</td><td><b>74.58%</b></td><td><b>79.58%</b></td><td><b>77.08%</b></td><td><b>73.85%</b></td><td><b>93.33%</b></td><td><b>77.75%</b></td><td><b>A</b></td><td><b>52.08%</b></td><td><b>51%</b></td><td><b>51.9%</b></td><td><b>B</b></td><td><b>67.08%</b></td><td><b>B+</b></td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">Moral Science</td><td>-</td><td>-</td><td>-</td><td>B</td><td>-</td><td>B</td><td>B</td><td>A</td><td>-</td><td>A</td><td>A</td><td> </td><td> </td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">G.K.</td><td>-</td><td>-</td><td>-</td><td>B</td><td>-</td><td>B</td><td>B</td><td>B</td><td>-</td><td>B</td><td>B</td><td> </td><td> </td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">Drawing </td><td>-</td><td>-</td><td>-</td><td>-</td><td>A</td><td>A</td><td>A</td><td>-</td><td>C</td><td>C</td><td>C</td><td> </td><td> </td></tr><tr><td scope="row" class="text-uppercase text-start ps-1">SUPW</td><td>-</td><td>-</td><td>-</td><td>-</td><td>A</td><td>A</td><td>A</td><td>-</td><td>D</td><td>D</td><td>D</td><td> </td><td> </td></tr></tbody></table>

                <!-- UT marks section  -->
                <table class="text-center my-2 ft15" id="UnitRecord" style="font-size: 10px; display: none;">
                    <tbody><tr>
                        <th style="width: 180px;">Scholastic Areas:</th>
                        <th colspan="2" scope="colgroup">Unit Test</th>
                    </tr>
                    <tr>
                        <th scope="col">Subjects</th>
                        <th scope="col">UT <span id="UnitName"></span> <span id="UTMaxMarkTotal"></span> </th>
                        <th scope="col">Grade</th>
                    </tr>
                </tbody></table>
                <!-- Terms marks section  -->
                <table class="text-center my-2 ft15" id="TermRecord" style="font-size: 10px; display: none;">
                    <tbody><tr>
                        <th style="width: 180px;">Scholastic Areas:</th>
                        <th colspan="4" scope="colgroup">TERM-<span id="TermName"></span></th>
                    </tr>
                    <tr>
                        <th scope="col">Subjects</th>
                        <th scope="col">Theory <span class="Term1TheoryMaxMarkTotal">(80)</span></th>
                        <th scope="col">Practical <span id="Term1TPracticalMaxMarkTotal"></span></th>
                        <th scope="col">Marks Obt. <span id="Term1TAllTotalMaxMarkTotal"></span></th>
                        <th scope="col">Grade</th>


                    </tr>
                </tbody></table>
                <!-- Pre Board marks section  -->
                <table class="text-center my-2 ft15" id="PreBoardRecord" style="font-size: 10px; display: none;">
                    <tbody><tr>
                        <th style="width: 180px;">Scholastic Areas:</th>
                        <th colspan="4" scope="colgroup">Pre Board-<span id="PreBoardTermName"></span></th>
                    </tr>
                    <tr>
                        <th scope="col">Subjects</th>
                        <th scope="col">Theory <span class="PreBoardTheoryMaxMarkTotal"></span></th>
                        <th scope="col">Practical <span id="PreBoardTPracticalMaxMarkTotal"></span></th>
                        <th scope="col">Marks Obt. <span id="PreBoardTAllTotalMaxMarkTotal"></span></th>
                        <th scope="col">Grade</th>


                    </tr>
                </tbody></table>

                <!-- Grading scale  -->
                <table class="text-center ft15" id="coScholasticTable" style="font-size: 10px;">
                    <tbody><tr>
                        <th colspan="6" scope="colgroup">
                            Co-Scholastic Areas [on a 4-point (A-NA) grading scale]
                        </th>
                    </tr>

                    <tr>
                        <th style="width: 300px;">Co-Scholastic Areas</th>
                        <th class="headerTermColumn headerTerm1Column" style="width: 65px;">TERM-I</th>
                        <th class="headerTermColumn headerTerm2Column" style="width:65px;">TERM-II</th>
                        <th class="headerTermColumn headerPreBoard1Column preBoardResult" style="width: 65px; display: none;">Pre Board-I</th>
                        <th class="headerTermColumn headerPreBoard2Column preBoardResult" style="width: 65px; display: none;">Pre Board-II</th>


                        <th style="width: 300px;">Co-Scholastic Areas</th>
                        <th class="headerTermColumn headerTerm1Column" style="width:65px;">TERM-I</th>
                        <th class="headerTermColumn headerTerm2Column" style="width:65px;">TERM-II</th>
                        <th class="headerTermColumn headerPreBoard1Column preBoardResult" style="width: 65px; display: none;">Pre Board-I</th>
                        <th class="headerTermColumn headerPreBoard2Column preBoardResult" style="width: 65px; display: none;">Pre Board-II</th>

                    </tr>


                </tbody><tr class="custom-row"><td scope="row" class="text-start ps-1">English Dictation </td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">English Reading </td><td scope="row">A</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">English Recitation </td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">English Writing </td><td scope="row">A</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">Hindi Dictation</td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">Hindi Reading </td><td scope="row">A</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">Hindi Recitation </td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">Hindi Writing </td><td scope="row">A</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">Interests</td><td scope="row">-</td><td scope="row">-</td><td scope="row" class="text-start ps-1">Habit &amp; Attitude-Study Habits </td><td scope="row">A</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">Habits &amp; Attitudes-Health Habits</td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">Values-Punctuality</td><td scope="row">A</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">Values-Cleanliness</td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">Values-Discipline</td><td scope="row">B</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">Co-Curricular Activities -Games/Sports</td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">Co-Curricular Activities -Rule of Language</td><td scope="row">A</td><td scope="row">-</td></tr><tr class="custom-row"><td scope="row" class="text-start ps-1">Co-Curricular Activities -Book Keeping </td><td scope="row">A</td><td scope="row">-</td><td scope="row" class="text-start ps-1">Other Activities-Home Work,etc</td><td scope="row">A</td><td scope="row">-</td></tr></table>




                <!-- Result section  -->
                <div class="d-flex justify-content-between align-items-center px-1">
                    <div class="ft15" style="font-size: 10px;">
                        <span><b>Result :</b></span>
                        <span id="result">Pass</span>
                    </div>
                    <div class="ft15" style="font-size: 10px;">
                        <span><b>Overall Grade :</b></span>
                        <span id="overallGrade">B+</span>
                    </div>
                </div>
                <div class="ft15 px-1" id="teacherRemark" style="font-size: 10px;">
                    <span><b>Class Teacher's Remarks : </b></span>
                    <span><span id="teacherRemarkText">bad</span>  <span id="promotedClass"></span> </span>
                </div>
                <div class="ft15 px-1" id="UnitTestRemark" style="display: none; font-size: 10px;">
                    <span><b>Class Teacher's Remarks : </b></span>
                    <span id="UnitTestRemarkText">. </span>
                </div>
                <!-- signature section  -->
                <div class="d-flex justify-content-between align-items-baseline px-3">
                    <div class="signature">
                        <img src="" alt="">
                        <span class="ft15" style="font-size: 10px;"><b>Parent / Guardian</b></span>
                    </div>
                    <div class="signature">
                        <img src="/WebsiteImages/StaffSignature/REKHA VYAS.jpg" id="teachersignature" style="width:115px; height:60px;" alt="">
                        <span class="ft15" style="font-size: 10px;"><b>Class Teacher</b></span>
                    </div>
                    <div class="signature">
                        <img src="/Content/Images/principle.png" style="width:115px; height:60px;" alt="">
                        <span class="ft15" style="font-size: 10px;"><b>Principal</b></span>
                    </div>
                </div>

                <div class="ft15 px-1 mt-2" style="font-size: 10px;">
                    <span><b>Grading scale for Scholastic Areas : </b></span>
                    <span>Grades are awarded on a 6-point grading scale as follows -</span>
                </div>

                <!-- marks range section  -->
                <table class="text-center ft15" style="font-size: 10px;">
                    <tbody><tr>
                        <th>Range (%)</th>
                        <td>34 &amp; Below</td>
                        <td>35 - 49</td>
                        <td>50 - 64</td>
                        <td>65 - 74</td>
                        <td>75 - 89</td>
                        <td>90 - 100</td>
                    </tr>
                    <tr>
                        <th>Grade</th>
                        <td>D (Failed)</td>
                        <td>C</td>
                        <td>B</td>
                        <td>B+</td>
                        <td>A</td>
                        <td>A+</td>
                    </tr>

                    <tr>
                        <td colspan="7" scope="colgroup" class="text-start ps-1 ps-1">
                            <div class="ft15" style="font-size: 10px;">
                                N.B. There will be no second attempt for English Language and
                                Literature. Second attempt is allowed for one subject provided
                                the score is below 35.
                            </div>
                            <div class="ft15" style="font-size: 10px;">Minimum mark for passing is 35.</div>
                            <div class="ft15" style="font-size: 10px;">** It Indicates Improvement Exam.</div>
                        </td>
                    </tr>
                </tbody></table>

                <!-- End  -->
            </div>
        </div>
    "
}